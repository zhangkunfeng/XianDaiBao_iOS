//
//  PrefixHeader.pch
//  BaiYangFinancial
//
//  Created by 无名小子 on 15/7/3.
//  Copyright (c) 2015年 无名小子. All rights reserved.
//

#ifndef BaiYangFinancial_PrefixHeader_pch
#define BaiYangFinancial_PrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#import <UIKit/UIKit.h>
#import <Foundation/Foundation.h>

#import "BaseViewController.h"

//程序中所用到图片的宏
#import "imagesMacro.h"

//设配的基本配置和程序的整体色调的宏
#import "DeviceConfiguration.h"
//网络请求
#import "AFNetworkTool.h"
#import "networkRequest.h"
//友盟分享
//#import "UMSocial.h"
#import <UMSocialCore/UMSocialCore.h>

#import "WDEncrypt.h"

#import "WDStoreDatas.h"

#import "WDQueryAccessToken.h"
#import "WDQuerySessionID.h"

//16进制转换成 rgb
#import "UIColor+NotRGB.h"

//自定义log
#ifdef DEBUG
#define NSLog(...) NSLog(__VA_ARGS__)
#else
#define NSLog(...)
#endif

#define WS(weakSelf)  __weak __typeof(&*self)weakSelf = self;


/**
 *  强制使用内连函数
 */
#define force_inline __inline__ __attribute__((always_inline))

#if __has_feature(objc_instancetype)

#undef AS_SINGLETON
#define AS_SINGLETON

#undef AS_SINGLETON
#define AS_SINGLETON(...)           \
- (instancetype) sharedInstance; \
+(instancetype) sharedInstance;

#undef DEF_SINGLETON
#define DEF_SINGLETON                            \
- (instancetype) sharedInstance {             \
return [[self class] sharedInstance];    \
}                                            \
+(instancetype) sharedInstance {             \
static dispatch_once_t once;             \
static id __singleton__;                 \
dispatch_once(&once, ^{                  \
__singleton__ = [[self alloc] init]; \
});                                      \
return __singleton__;                    \
}

#undef DEF_SINGLETON
#define DEF_SINGLETON(...)                       \
- (instancetype) sharedInstance {             \
return [[self class] sharedInstance];    \
}                                            \
+(instancetype) sharedInstance {             \
static dispatch_once_t once;             \
static id __singleton__;                 \
dispatch_once(&once, ^{                  \
__singleton__ = [[self alloc] init]; \
});                                      \
return __singleton__;                    \
}

#else // #if __has_feature(objc_instancetype)

#undef AS_SINGLETON
#define AS_SINGLETON(__class)    \
- (__class *) sharedInstance; \
+(__class *) sharedInstance;

#undef DEF_SINGLETON
#define DEF_SINGLETON(__class)                           \
- (__class *) sharedInstance {                        \
return [__class sharedInstance];                 \
}                                                    \
+(__class *) sharedInstance {                        \
static dispatch_once_t once;                     \
static __class *__singleton__;                   \
dispatch_once(&once, ^{                          \
__singleton__ = [[[self class] alloc] init]; \
});                                              \
return __singleton__;                            \
}

#endif // #if __has_feature(objc_instancetype)



#endif
